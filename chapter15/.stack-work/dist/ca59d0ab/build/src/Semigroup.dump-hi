
==================== FINAL INTERFACE ====================
2017-11-25 10:53:39.3450682 UTC

interface chapter15-0.1.0.0-Jcnq64q4x8L3hVPjY2Ehph:Semigroup 8002
  interface hash: f03a8c8fd8ee9648f0466f00df3318f6
  ABI hash: 66ac740a890ff847ad01cbf7f1002c10
  export-list hash: fe980078b95cc8110397c6d5876035ee
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 6dc482abc3b5fa230126311d37f8c87b
  sig of: Nothing
  used TH splices: False
  where
exports:
  Semigroup.Bigest{Semigroup.Bigest}
  Semigroup.Shortest{Semigroup.Shortest}
module dependencies:
package dependencies: base-4.9.1.0* ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Either base-4.9.1.0:Data.Functor.Const
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
import  -/  base-4.9.1.0:Data.Foldable 254e836c2d813d34e47feb29bb8d40ed
import  -/  base-4.9.1.0:Data.Semigroup 843942ffedd25dfb5c3241a1a495b346
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.Show eca5834daba3b6a2bbbe64ab52056707
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  ghc-prim-0.5.0.0:GHC.Classes 16d48e012d23eaef9bca91ccdd572c02
06681988609abb79541822cab486ea74
  $fEqBigest ::
    GHC.Classes.Eq a => GHC.Classes.Eq (Semigroup.Bigest a)
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(1*U,1*U)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a ($dEq :: GHC.Classes.Eq a).
                  @ (Semigroup.Bigest a)
                  (Semigroup.$fEqBigest_$c== @ a $dEq)
                  (Semigroup.$fEqBigest_$c/= @ a $dEq) -}
06681988609abb79541822cab486ea74
  $fEqBigest_$c/= ::
    GHC.Classes.Eq a =>
    Semigroup.Bigest a -> Semigroup.Bigest a -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LS),U(A,U)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Classes./=
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Classes.Eq a>_R
                 ->_R Sym (Semigroup.N:Bigest[0] <a>_R)
                 ->_R Sym (Semigroup.N:Bigest[0] <a>_R)
                 ->_R <GHC.Types.Bool>_R) -}
06681988609abb79541822cab486ea74
  $fEqBigest_$c== ::
    GHC.Classes.Eq a =>
    Semigroup.Bigest a -> Semigroup.Bigest a -> GHC.Types.Bool
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SL),U(U,A)>,
     Unfolding: InlineRule (0, True, True)
                GHC.Classes.==
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Classes.Eq a>_R
                 ->_R Sym (Semigroup.N:Bigest[0] <a>_R)
                 ->_R Sym (Semigroup.N:Bigest[0] <a>_R)
                 ->_R <GHC.Types.Bool>_R) -}
95f817dc651c7cdb91951a1d542d665d
  $fEqShortest ::
    GHC.Classes.Eq a => GHC.Classes.Eq (Semigroup.Shortest a)
  DFunId
  {- Arity: 1, HasNoCafRefs, Strictness: <L,U(C(C1(U)),A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a ($dEq :: GHC.Classes.Eq a).
                  @ (Semigroup.Shortest a)
                  (Semigroup.$fEqShortest_$c== @ a $dEq)
                  (Semigroup.$fEqShortest_$c/= @ a $dEq) -}
95f817dc651c7cdb91951a1d542d665d
  $fEqShortest_$c/= ::
    GHC.Classes.Eq a =>
    Semigroup.Shortest a -> Semigroup.Shortest a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                GHC.Classes.$fEq[]_$c/=
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Classes.Eq a>_R
                 ->_R Sym (Semigroup.N:Shortest[0]) <a>_N
                 ->_R Sym (Semigroup.N:Shortest[0]) <a>_N
                 ->_R <GHC.Types.Bool>_R) -}
95f817dc651c7cdb91951a1d542d665d
  $fEqShortest_$c== ::
    GHC.Classes.Eq a =>
    Semigroup.Shortest a -> Semigroup.Shortest a -> GHC.Types.Bool
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(C(C1(U)),A)><S,1*U><S,1*U>,
     Unfolding: InlineRule (0, True, True)
                GHC.Classes.$fEq[]_$c==
                  `cast`
                (forall (a :: <*>_N).
                 <GHC.Classes.Eq a>_R
                 ->_R Sym (Semigroup.N:Shortest[0]) <a>_N
                 ->_R Sym (Semigroup.N:Shortest[0]) <a>_N
                 ->_R <GHC.Types.Bool>_R) -}
06681988609abb79541822cab486ea74
  $fSemigroupBigest ::
    GHC.Classes.Ord a => Data.Semigroup.Semigroup (Semigroup.Bigest a)
  DFunId
  {- Arity: 1, Strictness: <L,U(A,A,C(C1(U)),A,C(C1(U)),A,A,A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a ($dOrd :: GHC.Classes.Ord a).
                  @ (Semigroup.Bigest a)
                  (Semigroup.$fSemigroupBigest_$c<> @ a $dOrd)
                  (Semigroup.$fSemigroupBigest_$csconcat @ a $dOrd)
                  (Semigroup.$fSemigroupBigest_$cstimes @ a $dOrd) -}
06681988609abb79541822cab486ea74
  $fSemigroupBigest_$c<> ::
    GHC.Classes.Ord a =>
    Semigroup.Bigest a -> Semigroup.Bigest a -> Semigroup.Bigest a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <S(LLLLC(C(S))LLL),U(A,A,1*C1(C1(U)),A,1*C1(C1(U)),A,A,A)><L,U><L,U>,
     Unfolding: (\ @ a
                   ($dOrd :: GHC.Classes.Ord a)
                   (ds :: Semigroup.Bigest a)
                   (ds1 :: Semigroup.Bigest a) ->
                 case GHC.Classes.>
                        @ a
                        $dOrd
                        ds `cast` (Semigroup.N:Bigest[0] <a>_R)
                        ds1 `cast` (Semigroup.N:Bigest[0] <a>_R) of wild {
                   GHC.Types.False
                   -> case GHC.Classes.<
                             @ a
                             $dOrd
                             ds `cast` (Semigroup.N:Bigest[0] <a>_R)
                             ds1 `cast` (Semigroup.N:Bigest[0] <a>_R) of wild1 {
                        GHC.Types.False -> ds GHC.Types.True -> ds1 }
                   GHC.Types.True -> ds }) -}
06681988609abb79541822cab486ea74
  $fSemigroupBigest_$csconcat ::
    GHC.Classes.Ord a =>
    Data.List.NonEmpty.NonEmpty (Semigroup.Bigest a)
    -> Semigroup.Bigest a
  {- Arity: 2, HasNoCafRefs,
     Strictness: <L,U(A,A,C(C1(U)),A,C(C1(U)),A,A,A)><S(LS),1*U(U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (2, True, False)
                (\ @ a
                   (w :: GHC.Classes.Ord a)
                   (w1 :: Data.List.NonEmpty.NonEmpty (Semigroup.Bigest a)) ->
                 case w1 of ww { Data.List.NonEmpty.:| ww1 ww2 ->
                 Semigroup.$w$csconcat @ a w ww1 ww2 }) -}
06681988609abb79541822cab486ea74
  $fSemigroupBigest_$cstimes ::
    GHC.Classes.Ord a =>
    forall b.
    GHC.Real.Integral b =>
    b -> Semigroup.Bigest a -> Semigroup.Bigest a
  {- Arity: 4,
     Strictness: <L,U(A,A,C(C1(U)),A,C(C1(U)),A,A,A)><S(SLLLLLLLL),U(U,U,C(C1(U)),C(C1(U)),A,A,A,A,A)><L,U><L,U> -}
95f817dc651c7cdb91951a1d542d665d
  $fSemigroupShortest ::
    Data.Semigroup.Semigroup (Semigroup.Shortest a)
  DFunId
  {- Strictness: m, Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a.
                  @ (Semigroup.Shortest a)
                  (Semigroup.$fSemigroupShortest_$c<> @ a)
                  (Semigroup.$fSemigroupShortest_$csconcat @ a)
                  (Semigroup.$fSemigroupShortest_$cstimes @ a) -}
95f817dc651c7cdb91951a1d542d665d
  $fSemigroupShortest1 ::
    Semigroup.Shortest a
    -> [Semigroup.Shortest a] -> Semigroup.Shortest a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,1*U> -}
95f817dc651c7cdb91951a1d542d665d
  $fSemigroupShortest_$c<> ::
    Semigroup.Shortest a
    -> Semigroup.Shortest a -> Semigroup.Shortest a
  {- Arity: 2, HasNoCafRefs, Strictness: <S,U><S,U>,
     Unfolding: (\ @ a
                   (ds :: Semigroup.Shortest a)
                   (ds1 :: Semigroup.Shortest a) ->
                 case GHC.List.$wlenAcc
                        @ a
                        ds `cast` (Semigroup.N:Shortest[0] <a>_N)
                        0# of ww2 { DEFAULT ->
                 case GHC.List.$wlenAcc
                        @ a
                        ds1 `cast` (Semigroup.N:Shortest[0] <a>_N)
                        0# of ww1 { DEFAULT ->
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.># ww2 ww1) of wild {
                   GHC.Types.False -> ds GHC.Types.True -> ds1 } } }) -}
95f817dc651c7cdb91951a1d542d665d
  $fSemigroupShortest_$csconcat ::
    Data.List.NonEmpty.NonEmpty (Semigroup.Shortest a)
    -> Semigroup.Shortest a
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SS),1*U(U,1*U)>,
     Inline: INLINE[0],
     Unfolding: InlineRule (1, True, False)
                (\ @ a (w :: Data.List.NonEmpty.NonEmpty (Semigroup.Shortest a)) ->
                 case w of ww { Data.List.NonEmpty.:| ww1 ww2 ->
                 Semigroup.$fSemigroupShortest1 @ a ww1 ww2 }) -}
95f817dc651c7cdb91951a1d542d665d
  $fSemigroupShortest_$cstimes ::
    GHC.Real.Integral b =>
    b -> Semigroup.Shortest a -> Semigroup.Shortest a
  {- Arity: 3,
     Strictness: <S(SLLLLLLLL),U(U,U,C(C1(U)),C(C1(U)),A,A,A,A,A)><L,U><S,U> -}
06681988609abb79541822cab486ea74
  $fShowBigest ::
    GHC.Show.Show a => GHC.Show.Show (Semigroup.Bigest a)
  DFunId
  {- Arity: 1, Strictness: <L,U(C(C1(U)),A,A)>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a ($dShow :: GHC.Show.Show a).
                  @ (Semigroup.Bigest a)
                  (Semigroup.$fShowBigest_$cshowsPrec @ a $dShow)
                  (Semigroup.$fShowBigest_$cshow @ a $dShow)
                  (Semigroup.$fShowBigest_$cshowList @ a $dShow) -}
bb0115d1b54e79b2c612cb6e9d16ab1f
  $fShowBigest1 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 0#) -}
939be8b20578acd91cdbd77d607e655d
  $fShowBigest2 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Bigest "#) -}
8f66079d2bf9d702ab0bf4fae0ec30ba
  $fShowBigest3 :: GHC.Types.Int
  {- HasNoCafRefs, Strictness: m, Unfolding: (GHC.Types.I# 11#) -}
06681988609abb79541822cab486ea74
  $fShowBigest_$cshow ::
    GHC.Show.Show a => Semigroup.Bigest a -> GHC.Base.String
  {- Arity: 2, Strictness: <L,1*U(1*C1(C1(C1(U))),A,A)><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a ($dShow :: GHC.Show.Show a) (x :: Semigroup.Bigest a) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c n Semigroup.$fShowBigest2)
                   (GHC.Show.showsPrec
                      @ a
                      $dShow
                      Semigroup.$fShowBigest3
                      x `cast` (Semigroup.N:Bigest[0] <a>_R)
                      (GHC.Types.[] @ GHC.Types.Char))) -}
06681988609abb79541822cab486ea74
  $fShowBigest_$cshowList ::
    GHC.Show.Show a => [Semigroup.Bigest a] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(C(C1(U)),A,A)><S,1*U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (eta :: [Semigroup.Bigest a])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Semigroup.Bigest a)
                   (Semigroup.$fShowBigest_$cshowsPrec
                      @ a
                      $dShow
                      Semigroup.$fShowBigest1)
                   eta
                   eta1) -}
06681988609abb79541822cab486ea74
  $fShowBigest_$cshowsPrec ::
    GHC.Show.Show a =>
    GHC.Types.Int -> Semigroup.Bigest a -> GHC.Show.ShowS
  {- Arity: 3,
     Strictness: <L,1*U(1*C1(C1(U)),A,A)><S(S),1*U(U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (w :: GHC.Show.Show a)
                   (w1 :: GHC.Types.Int)
                   (w2 :: Semigroup.Bigest a) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 Semigroup.$w$cshowsPrec @ a w ww1 w2 }) -}
95f817dc651c7cdb91951a1d542d665d
  $fShowShortest ::
    GHC.Show.Show a => GHC.Show.Show (Semigroup.Shortest a)
  DFunId
  {- Arity: 1, Strictness: <L,U(A,A,C(U))>m,
     Inline: [ALWAYS] CONLIKE,
     Unfolding: DFun: @ a ($dShow :: GHC.Show.Show a).
                  @ (Semigroup.Shortest a)
                  (Semigroup.$fShowShortest_$cshowsPrec @ a $dShow)
                  (Semigroup.$fShowShortest_$cshow @ a $dShow)
                  (Semigroup.$fShowShortest_$cshowList @ a $dShow) -}
61ef36a005b145225dce9b67581bef3f
  $fShowShortest1 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Shortest "#) -}
95f817dc651c7cdb91951a1d542d665d
  $fShowShortest_$cshow ::
    GHC.Show.Show a => Semigroup.Shortest a -> GHC.Base.String
  {- Arity: 2, Strictness: <L,1*U(A,A,1*C1(C1(U)))><L,U>,
     Unfolding: InlineRule (2, True, False)
                (\ @ a ($dShow :: GHC.Show.Show a) (x :: Semigroup.Shortest a) ->
                 GHC.Base.augment
                   @ GHC.Types.Char
                   (\ @ b
                      (c :: GHC.Types.Char -> b -> b)[OneShot]
                      (n :: b)[OneShot] ->
                    GHC.Base.foldr @ GHC.Types.Char @ b c n Semigroup.$fShowShortest1)
                   (GHC.Show.showList
                      @ a
                      $dShow
                      x `cast` (Semigroup.N:Shortest[0] <a>_N)
                      (GHC.Types.[] @ GHC.Types.Char))) -}
95f817dc651c7cdb91951a1d542d665d
  $fShowShortest_$cshowList ::
    GHC.Show.Show a => [Semigroup.Shortest a] -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,U(A,A,C(U))><S,1*U><L,U>,
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   ($dShow :: GHC.Show.Show a)
                   (eta :: [Semigroup.Shortest a])
                   (eta1 :: GHC.Base.String) ->
                 GHC.Show.showList__
                   @ (Semigroup.Shortest a)
                   (Semigroup.$fShowShortest_$cshowsPrec
                      @ a
                      $dShow
                      Semigroup.$fShowBigest1)
                   eta
                   eta1) -}
95f817dc651c7cdb91951a1d542d665d
  $fShowShortest_$cshowsPrec ::
    GHC.Show.Show a =>
    GHC.Types.Int -> Semigroup.Shortest a -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(A,A,1*C1(U))><S(S),1*U(U)><L,U>,
     Inline: INLINE[0],
     Unfolding: InlineRule (3, True, False)
                (\ @ a
                   (w :: GHC.Show.Show a)
                   (w1 :: GHC.Types.Int)
                   (w2 :: Semigroup.Shortest a) ->
                 case w1 of ww { GHC.Types.I# ww1 ->
                 Semigroup.$w$cshowsPrec1 @ a w ww1 w2 }) -}
b8f7d966480b98ffb2771ded10f9345f
  $tc'Bigest :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1332964768494772538##
                   13863249833098920399##
                   Semigroup.$trModule
                   Semigroup.$tc'Bigest1) -}
e7f2314731c6df275c83d0c67f3d074b
  $tc'Bigest1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Bigest"#) -}
bf39aaefbf37813bce42b8278bb63dfe
  $tc'Shortest :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   1628622342492178288##
                   297211582527449015##
                   Semigroup.$trModule
                   Semigroup.$tc'Shortest1) -}
39f6966944a153f4f41aa0ff7276ccf6
  $tc'Shortest1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Shortest"#) -}
4257b1860a1e29278ff36dc6ef08b86f
  $tcBigest :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3944794843421964466##
                   1139089365791617062##
                   Semigroup.$trModule
                   Semigroup.$tcBigest1) -}
ba31cfac070ee034ff3dec2468592004
  $tcBigest1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Bigest"#) -}
4d52b58750b59c967df244694643bd3e
  $tcShortest :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   3743301017207475828##
                   13638530990744149345##
                   Semigroup.$trModule
                   Semigroup.$tcShortest1) -}
218f8a8a1e6aa09df0ba69d286b5201f
  $tcShortest1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Shortest"#) -}
b6c6d6cc7104f1c2f4d668abe28999b3
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module
                   Semigroup.$trModule2
                   Semigroup.$trModule1) -}
12774f41df2d13dcf9f5a710afeddc5f
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Semigroup"#) -}
f42ba434199f84f118f758e0fcde9a6d
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "chapter15-0.1.0.0-Jcnq64q4x8L3hVPjY2Ehph"#) -}
06681988609abb79541822cab486ea74
  $w$csconcat ::
    GHC.Classes.Ord a =>
    Semigroup.Bigest a -> [Semigroup.Bigest a] -> Semigroup.Bigest a
  {- Arity: 3, HasNoCafRefs,
     Strictness: <L,U(A,A,C(C1(U)),A,C(C1(U)),A,A,A)><L,U><S,1*U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: GHC.Classes.Ord a)
                   (ww :: Semigroup.Bigest a)
                   (ww1 :: [Semigroup.Bigest a]) ->
                 letrec {
                   go :: Semigroup.Bigest a
                         -> [Semigroup.Bigest a] -> Semigroup.Bigest a
                     {- Arity: 2, Strictness: <L,U><S,1*U> -}
                   = \ (b :: Semigroup.Bigest a) (ds1 :: [Semigroup.Bigest a]) ->
                     case ds1 of wild1 {
                       [] -> b
                       : c cs -> Semigroup.$fSemigroupBigest_$c<> @ a w b (go c cs) }
                 } in
                 go ww ww1) -}
06681988609abb79541822cab486ea74
  $w$cshowsPrec ::
    GHC.Show.Show a =>
    GHC.Prim.Int# -> Semigroup.Bigest a -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(1*C1(C1(U)),A,A)><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: GHC.Show.Show a)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: Semigroup.Bigest a) ->
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.showsPrec
                       @ a
                       w
                       Semigroup.$fShowBigest3
                       w1 `cast` (Semigroup.N:Bigest[0] <a>_R)
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Base.++ @ GHC.Types.Char Semigroup.$fShowBigest2 (g x)
                   GHC.Types.True
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (GHC.Base.++
                           @ GHC.Types.Char
                           Semigroup.$fShowBigest2
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x))) }) -}
95f817dc651c7cdb91951a1d542d665d
  $w$cshowsPrec1 ::
    GHC.Show.Show a =>
    GHC.Prim.Int# -> Semigroup.Shortest a -> GHC.Show.ShowS
  {- Arity: 3, Strictness: <L,1*U(A,A,1*C1(U))><S,U><L,U>,
     Inline: [0],
     Unfolding: (\ @ a
                   (w :: GHC.Show.Show a)
                   (ww :: GHC.Prim.Int#)
                   (w1 :: Semigroup.Shortest a) ->
                 let {
                   g :: GHC.Base.String -> GHC.Base.String
                   = GHC.Show.showList @ a w w1 `cast` (Semigroup.N:Shortest[0] <a>_N)
                 } in
                 case GHC.Prim.tagToEnum#
                        @ GHC.Types.Bool
                        (GHC.Prim.>=# ww 11#) of wild {
                   GHC.Types.False
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Base.++ @ GHC.Types.Char Semigroup.$fShowShortest1 (g x)
                   GHC.Types.True
                   -> \ (x :: GHC.Base.String) ->
                      GHC.Types.:
                        @ GHC.Types.Char
                        GHC.Show.shows7
                        (GHC.Base.++
                           @ GHC.Types.Char
                           Semigroup.$fShowShortest1
                           (g (GHC.Types.: @ GHC.Types.Char GHC.Show.shows4 x))) }) -}
06681988609abb79541822cab486ea74
  newtype Bigest a = Bigest a
95f817dc651c7cdb91951a1d542d665d
  newtype Shortest a = Shortest [a]
instance [safe] GHC.Classes.Eq [Semigroup.Bigest]
  = Semigroup.$fEqBigest
instance [safe] GHC.Classes.Eq [Semigroup.Shortest]
  = Semigroup.$fEqShortest
instance [safe] Data.Semigroup.Semigroup [Semigroup.Bigest]
  = Semigroup.$fSemigroupBigest
instance [safe] Data.Semigroup.Semigroup [Semigroup.Shortest]
  = Semigroup.$fSemigroupShortest
instance [safe] GHC.Show.Show [Semigroup.Bigest]
  = Semigroup.$fShowBigest
instance [safe] GHC.Show.Show [Semigroup.Shortest]
  = Semigroup.$fShowShortest
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

