Configuring conduit-1.3.0.1...
Preprocessing library for conduit-1.3.0.1..
Building library for conduit-1.3.0.1..
[ 1 of 15] Compiling Data.Conduit.Internal.Pipe ( src\Data\Conduit\Internal\Pipe.hs, .stack-work\dist\5c8418a7\build\Data\Conduit\Internal\Pipe.o )

[;1msrc\Data\Conduit\Internal\Pipe.hs:215:11: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Winline-rule-shadowing[0m[0m[;1m][0m[0m[;1m
    Rule "conduit: CI.await >>= maybe" may never fire
      because `maybe' might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for `maybe'[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m215 |[0m[0m {-# RULES [;1m[35m"conduit: CI.await >>= maybe" forall x y. await >>= maybe x y = NeedInput y (const x)[0m[0m #-}
[;1m[34m    |[0m[0m[;1m[35m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\Data\Conduit\Internal\Pipe.hs:224:11: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Winline-rule-shadowing[0m[0m[;1m][0m[0m[;1m
    Rule "conduit: awaitE >>= either" may never fire
      because `either' might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for `either'[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m224 |[0m[0m {-# RULES [;1m[35m"conduit: awaitE >>= either" forall x y. awaitE >>= either x y = NeedInput y x[0m[0m #-}
[;1m[34m    |[0m[0m[;1m[35m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m[ 2 of 15] Compiling Data.Conduit.Internal.Conduit ( src\Data\Conduit\Internal\Conduit.hs, .stack-work\dist\5c8418a7\build\Data\Conduit\Internal\Conduit.o )

[;1msrc\Data\Conduit\Internal\Conduit.hs:817:11: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Winline-rule-shadowing[0m[0m[;1m][0m[0m[;1m
    Rule "conduit: await >>= maybe" may never fire
      because `maybe' might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for `maybe'[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m817 |[0m[0m {-# RULES [;1m[35m"conduit: await >>= maybe" forall x y. await >>= maybe x y = await' x y[0m[0m #-}
[;1m[34m    |[0m[0m[;1m[35m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m[ 3 of 15] Compiling Data.Conduit.Internal.Fusion ( src\Data\Conduit\Internal\Fusion.hs, .stack-work\dist\5c8418a7\build\Data\Conduit\Internal\Fusion.o )

[;1msrc\Data\Conduit\Internal\Fusion.hs:69:11: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Winline-rule-shadowing[0m[0m[;1m][0m[0m[;1m
    Rule "conduit: fuseStream" may never fire
      because `.|' might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for `.|'[0m[0m
[;1m[34m   |[0m[0m
[;1m[34m69 |[0m[0m {-# RULES [;1m[35m"conduit: fuseStream" forall left right.[0m[0m
[;1m[34m   |[0m[0m[;1m[35m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...[0m[0m
[0m[0m[0m[ 4 of 15] Compiling Data.Conduit.Internal.List.Stream ( src\Data\Conduit\Internal\List\Stream.hs, .stack-work\dist\5c8418a7\build\Data\Conduit\Internal\List\Stream.o )
[ 5 of 15] Compiling Data.Conduit.Combinators.Stream ( src\Data\Conduit\Combinators\Stream.hs, .stack-work\dist\5c8418a7\build\Data\Conduit\Combinators\Stream.o )
[ 6 of 15] Compiling Data.Conduit     ( src\Data\Conduit.hs, .stack-work\dist\5c8418a7\build\Data\Conduit.o )
[ 7 of 15] Compiling Data.Conduit.Internal ( src\Data\Conduit\Internal.hs, .stack-work\dist\5c8418a7\build\Data\Conduit\Internal.o )
[ 8 of 15] Compiling Data.Conduit.Lift ( src\Data\Conduit\Lift.hs, .stack-work\dist\5c8418a7\build\Data\Conduit\Lift.o )
[ 9 of 15] Compiling Data.Conduit.List ( src\Data\Conduit\List.hs, .stack-work\dist\5c8418a7\build\Data\Conduit\List.o )

[;1msrc\Data\Conduit\List.hs:304:11: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Winline-rule-shadowing[0m[0m[;1m][0m[0m[;1m
    Rule "conduit: $$ fold" may never fire
      because `.|' might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for `.|'[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m304 |[0m[0m {-# RULES [;1m[35m"conduit: $$ fold" forall src f b. runConduit (src .| fold f b) = connectFold src f b[0m[0m #-}
[;1m[34m    |[0m[0m[;1m[35m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\Data\Conduit\List.hs:320:11: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Winline-rule-shadowing[0m[0m[;1m][0m[0m[;1m
    Rule "conduit: $$ foldM" may never fire
      because `.|' might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for `.|'[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m320 |[0m[0m {-# RULES [;1m[35m"conduit: $$ foldM" forall src f b. runConduit (src .| foldM f b) = connectFoldM src f b[0m[0m #-}
[;1m[34m    |[0m[0m[;1m[35m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\Data\Conduit\List.hs:363:11: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Winline-rule-shadowing[0m[0m[;1m][0m[0m[;1m
    Rule "conduit: connect to mapM_" may never fire
      because `.|' might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for `.|'[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m363 |[0m[0m {-# RULES [;1m[35m"conduit: connect to mapM_" [2] forall f src. runConduit (src .| mapM_ f) = srcMapM_ src f[0m[0m #-}
[;1m[34m    |[0m[0m[;1m[35m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\Data\Conduit\List.hs:797:11: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Winline-rule-shadowing[0m[0m[;1m][0m[0m[;1m
    Rule "conduit: source/filter fusion .|" may never fire
      because `.|' might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for `.|'[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m797 |[0m[0m {-# RULES [;1m[35m"conduit: source/filter fusion .|" forall f src. src .| filter f = filterFuseRight src f[0m[0m #-}
[;1m[34m    |[0m[0m[;1m[35m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\Data\Conduit\List.hs:821:11: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Winline-rule-shadowing[0m[0m[;1m][0m[0m[;1m
    Rule "conduit: connect to sinkNull" may never fire
      because `.|' might inline first
    Probable fix: add an INLINE[n] or NOINLINE[n] pragma for `.|'[0m[0m
[;1m[34m    |[0m[0m
[;1m[34m821 |[0m[0m {-# RULES [;1m[35m"conduit: connect to sinkNull" forall src. runConduit (src .| sinkNull) = srcSinkNull src[0m[0m #-}
[;1m[34m    |[0m[0m[;1m[35m           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m[10 of 15] Compiling Data.Streaming.Filesystem ( src\Data\Streaming\Filesystem.hs, .stack-work\dist\5c8418a7\build\Data\Streaming\Filesystem.o )

[;1msrc\Data\Streaming\Filesystem.hs:48:1: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunused-top-binds[0m[0m[;1m][0m[0m[;1m
    Defined but not used: `isSymlink'[0m[0m
[;1m[34m   |[0m[0m
[;1m[34m48 |[0m[0m [;1m[35misSymlink[0m[0m _ = return False
[;1m[34m   |[0m[0m[;1m[35m ^^^^^^^^^[0m[0m
[0m[0m[0m[11 of 15] Compiling System.Win32File ( .stack-work\dist\5c8418a7\build\System\Win32File.hs, .stack-work\dist\5c8418a7\build\System\Win32File.o )

[;1msrc\System\Win32File.hsc:11:1: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunused-imports[0m[0m[;1m][0m[0m[;1m
    The import of `Foreign.Ptr' is redundant
      except perhaps to import instances from `Foreign.Ptr'
    To import instances alone, use: import Foreign.Ptr()[0m[0m
[;1m[34m   |[0m[0m
[;1m[34m11 |[0m[0m [;1m[35mimport Foreign.Ptr (castPtr)[0m[0m
[;1m[34m   |[0m[0m[;1m[35m ^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\System\Win32File.hsc:12:1: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunused-imports[0m[0m[;1m][0m[0m[;1m
    The import of `Foreign.Marshal.Alloc' is redundant
      except perhaps to import instances from `Foreign.Marshal.Alloc'
    To import instances alone, use: import Foreign.Marshal.Alloc()[0m[0m
[;1m[34m   |[0m[0m
[;1m[34m12 |[0m[0m [;1m[35mimport Foreign.Marshal.Alloc (mallocBytes, free)[0m[0m
[;1m[34m   |[0m[0m[;1m[35m ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\System\Win32File.hsc:13:1: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunused-imports[0m[0m[;1m][0m[0m[;1m
    The import of `ForeignPtr'
    from module `Foreign.ForeignPtr' is redundant[0m[0m
[;1m[34m   |[0m[0m
[;1m[34m13 |[0m[0m [;1m[35mimport Foreign.ForeignPtr       (ForeignPtr, withForeignPtr)[0m[0m
[;1m[34m   |[0m[0m[;1m[35m ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\System\Win32File.hsc:46:1: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunused-top-binds[0m[0m[;1m][0m[0m[;1m
    Defined but not used: `oWronly'[0m[0m
[;1m[34m   |[0m[0m
[;1m[34m46 |[0m[0m [;1m[35m    }[0m[0m
[;1m[34m   |[0m[0m[;1m[35m ^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\System\Win32File.hsc:48:1: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunused-top-binds[0m[0m[;1m][0m[0m[;1m
    Defined but not used: `oCreat'[0m[0m
[;1m[34m   |[0m[0m
[;1m[34m48 |[0m[0m [;1m[35mnewtyp[0m[0me SHFlag = SHFlag CInt
[;1m[34m   |[0m[0m[;1m[35m ^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\System\Win32File.hsc:61:1: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunused-top-binds[0m[0m[;1m][0m[0m[;1m
    Defined but not used: `pIwrite'[0m[0m
[;1m[34m   |[0m[0m
[;1m[34m61 |[0m[0m [;1m[35m    }[0m[0m
[;1m[34m   |[0m[0m[;1m[35m ^^^^^^^[0m[0m
[0m[0m[0m
[;1msrc\System\Win32File.hsc:69:1: [;1m[35mwarning:[0m[0m[;1m [[;1m[35m-Wunused-top-binds[0m[0m[;1m][0m[0m[;1m
    Defined but not used: `c_write'[0m[0m
[;1m[34m   |[0m[0m
[;1m[34m69 |[0m[0m [;1m[35mforeign import ccall "_write"[0m[0m
[;1m[34m   |[0m[0m[;1m[35m ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^...[0m[0m
[0m[0m[0m[12 of 15] Compiling Data.Streaming.FileRead ( src\Data\Streaming\FileRead.hs, .stack-work\dist\5c8418a7\build\Data\Streaming\FileRead.o )
[13 of 15] Compiling Data.Conduit.Combinators ( src\Data\Conduit\Combinators.hs, .stack-work\dist\5c8418a7\build\Data\Conduit\Combinators.o )
[14 of 15] Compiling Data.Conduit.Combinators.Unqualified ( src\Data\Conduit\Combinators\Unqualified.hs, .stack-work\dist\5c8418a7\build\Data\Conduit\Combinators\Unqualified.o )
[15 of 15] Compiling Conduit          ( src\Conduit.hs, .stack-work\dist\5c8418a7\build\Conduit.o )
Installing library in C:\sr\snapshots\9f8b1558\lib\x86_64-windows-ghc-8.2.2\conduit-1.3.0.1-HWOHXpsyzYuIlMoAhnZp1P
Registering library for conduit-1.3.0.1..
